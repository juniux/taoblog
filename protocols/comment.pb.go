// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocols/comment.proto

package protocols

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListCommentsMode int32

const (
	ListCommentsMode_ListCommentsModeUnspecified ListCommentsMode = 0
	ListCommentsMode_ListCommentsModeTree        ListCommentsMode = 1
	ListCommentsMode_ListCommentsModeFlat        ListCommentsMode = 2
)

var ListCommentsMode_name = map[int32]string{
	0: "ListCommentsModeUnspecified",
	1: "ListCommentsModeTree",
	2: "ListCommentsModeFlat",
}

var ListCommentsMode_value = map[string]int32{
	"ListCommentsModeUnspecified": 0,
	"ListCommentsModeTree":        1,
	"ListCommentsModeFlat":        2,
}

func (x ListCommentsMode) String() string {
	return proto.EnumName(ListCommentsMode_name, int32(x))
}

func (ListCommentsMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_57d9977b1722fca3, []int{0}
}

type Comment struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Parent               int64                `protobuf:"varint,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Root                 int64                `protobuf:"varint,3,opt,name=root,proto3" json:"root,omitempty"`
	PostId               int64                `protobuf:"varint,4,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Author               string               `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Email                string               `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Url                  string               `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	Ip                   string               `protobuf:"bytes,8,opt,name=ip,proto3" json:"ip,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,9,opt,name=date,proto3" json:"date,omitempty"`
	Content              string               `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	Children             []*Comment           `protobuf:"bytes,11,rep,name=children,proto3" json:"children,omitempty"`
	Avatar               string               `protobuf:"bytes,12,opt,name=avatar,proto3" json:"avatar,omitempty"`
	IsAdmin              bool                 `protobuf:"varint,13,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_57d9977b1722fca3, []int{0}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Comment) GetParent() int64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *Comment) GetRoot() int64 {
	if m != nil {
		return m.Root
	}
	return 0
}

func (m *Comment) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *Comment) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Comment) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Comment) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Comment) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Comment) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Comment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Comment) GetChildren() []*Comment {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *Comment) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Comment) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

type ListCommentsRequest struct {
	Mode                 ListCommentsMode `protobuf:"varint,1,opt,name=mode,proto3,enum=protocols.ListCommentsMode" json:"mode,omitempty"`
	PostId               int64            `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Fields               []string         `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Limit                int64            `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int64            `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy              string           `protobuf:"bytes,6,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListCommentsRequest) Reset()         { *m = ListCommentsRequest{} }
func (m *ListCommentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCommentsRequest) ProtoMessage()    {}
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57d9977b1722fca3, []int{1}
}

func (m *ListCommentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommentsRequest.Unmarshal(m, b)
}
func (m *ListCommentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommentsRequest.Marshal(b, m, deterministic)
}
func (m *ListCommentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsRequest.Merge(m, src)
}
func (m *ListCommentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCommentsRequest.Size(m)
}
func (m *ListCommentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsRequest proto.InternalMessageInfo

func (m *ListCommentsRequest) GetMode() ListCommentsMode {
	if m != nil {
		return m.Mode
	}
	return ListCommentsMode_ListCommentsModeUnspecified
}

func (m *ListCommentsRequest) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *ListCommentsRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *ListCommentsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListCommentsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListCommentsRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type ListCommentsResponse struct {
	Comments             []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListCommentsResponse) Reset()         { *m = ListCommentsResponse{} }
func (m *ListCommentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCommentsResponse) ProtoMessage()    {}
func (*ListCommentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57d9977b1722fca3, []int{2}
}

func (m *ListCommentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommentsResponse.Unmarshal(m, b)
}
func (m *ListCommentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommentsResponse.Marshal(b, m, deterministic)
}
func (m *ListCommentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsResponse.Merge(m, src)
}
func (m *ListCommentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCommentsResponse.Size(m)
}
func (m *ListCommentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsResponse proto.InternalMessageInfo

func (m *ListCommentsResponse) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocols.ListCommentsMode", ListCommentsMode_name, ListCommentsMode_value)
	proto.RegisterType((*Comment)(nil), "protocols.Comment")
	proto.RegisterType((*ListCommentsRequest)(nil), "protocols.ListCommentsRequest")
	proto.RegisterType((*ListCommentsResponse)(nil), "protocols.ListCommentsResponse")
}

func init() { proto.RegisterFile("protocols/comment.proto", fileDescriptor_57d9977b1722fca3) }

var fileDescriptor_57d9977b1722fca3 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xc1, 0x8a, 0xdb, 0x30,
	0x10, 0xad, 0xed, 0x6c, 0x9c, 0x28, 0xed, 0x12, 0xd4, 0xa5, 0xab, 0xee, 0x1e, 0xd6, 0x84, 0x1e,
	0x4c, 0x0f, 0x36, 0xa4, 0x5f, 0xd0, 0x2d, 0x2c, 0x14, 0xda, 0x8b, 0xd9, 0x5e, 0x7a, 0x09, 0xb2,
	0x25, 0x3b, 0x02, 0xcb, 0xe3, 0x4a, 0xf2, 0xc2, 0xfe, 0x5d, 0xff, 0xa3, 0x3f, 0x53, 0x3c, 0x56,
	0x42, 0x36, 0x94, 0xde, 0xe6, 0x3d, 0x3d, 0xcd, 0xcc, 0x7b, 0x43, 0xae, 0x7b, 0x03, 0x0e, 0x2a,
	0x68, 0x6d, 0x5e, 0x81, 0xd6, 0xb2, 0x73, 0x19, 0x32, 0x74, 0x79, 0x7c, 0xb8, 0xb9, 0x6b, 0x00,
	0x9a, 0x56, 0xe6, 0xc8, 0x94, 0x43, 0x9d, 0x3b, 0xa5, 0xa5, 0x75, 0x5c, 0xf7, 0x93, 0x76, 0xf3,
	0x27, 0x24, 0xf1, 0x97, 0xe9, 0x37, 0xbd, 0x24, 0xa1, 0x12, 0x2c, 0x48, 0x82, 0x34, 0x2a, 0x42,
	0x25, 0xe8, 0x3b, 0x32, 0xef, 0xb9, 0x91, 0x9d, 0x63, 0x21, 0x72, 0x1e, 0x51, 0x4a, 0x66, 0x06,
	0xc0, 0xb1, 0x08, 0x59, 0xac, 0xe9, 0x35, 0x89, 0x7b, 0xb0, 0x6e, 0xa7, 0x04, 0x9b, 0x79, 0x31,
	0x58, 0xf7, 0x15, 0x9b, 0xf0, 0xc1, 0xed, 0xc1, 0xb0, 0x8b, 0x24, 0x48, 0x97, 0x85, 0x47, 0xf4,
	0x8a, 0x5c, 0x48, 0xcd, 0x55, 0xcb, 0xe6, 0x48, 0x4f, 0x80, 0xae, 0x49, 0x34, 0x98, 0x96, 0xc5,
	0xc8, 0x8d, 0x25, 0x2e, 0xd5, 0xb3, 0x05, 0x12, 0xa1, 0xea, 0x69, 0x46, 0x66, 0x82, 0x3b, 0xc9,
	0x96, 0x49, 0x90, 0xae, 0xb6, 0x37, 0xd9, 0x64, 0x30, 0x3b, 0x18, 0xcc, 0x1e, 0x0f, 0x06, 0x0b,
	0xd4, 0x51, 0x46, 0xe2, 0x0a, 0x3a, 0x37, 0xba, 0x20, 0xd8, 0xe4, 0x00, 0x69, 0x46, 0x16, 0xd5,
	0x5e, 0xb5, 0xc2, 0xc8, 0x8e, 0xad, 0x92, 0x28, 0x5d, 0x6d, 0x69, 0x76, 0x4c, 0x2e, 0xf3, 0xa1,
	0x14, 0x47, 0x0d, 0x3a, 0x79, 0xe2, 0x8e, 0x1b, 0xf6, 0xda, 0x3b, 0x41, 0x44, 0xdf, 0x93, 0x85,
	0xb2, 0x3b, 0x2e, 0xb4, 0xea, 0xd8, 0x9b, 0x24, 0x48, 0x17, 0x45, 0xac, 0xec, 0xe7, 0x11, 0x6e,
	0x7e, 0x07, 0xe4, 0xed, 0x37, 0x65, 0x9d, 0x6f, 0x66, 0x0b, 0xf9, 0x6b, 0x90, 0xd6, 0xd1, 0x9c,
	0xcc, 0x34, 0x08, 0x89, 0x59, 0x5f, 0x6e, 0x6f, 0x4f, 0xc6, 0x9e, 0xaa, 0xbf, 0x83, 0x90, 0x05,
	0x0a, 0x4f, 0xe3, 0x0d, 0xcf, 0xe3, 0xad, 0x95, 0x6c, 0x85, 0x65, 0x51, 0x12, 0x8d, 0x4b, 0x4d,
	0x68, 0x8c, 0xb7, 0x55, 0x5a, 0x39, 0x7f, 0x8d, 0x09, 0x8c, 0x6a, 0xa8, 0x6b, 0x2b, 0x1d, 0x1e,
	0x23, 0x2a, 0x3c, 0x1a, 0x2d, 0x80, 0x11, 0xd2, 0xec, 0xca, 0x67, 0x7f, 0x8f, 0x18, 0xf1, 0xfd,
	0xf3, 0xe6, 0x81, 0x5c, 0xbd, 0x74, 0x60, 0x7b, 0xe8, 0xac, 0xc4, 0xf4, 0x3c, 0xc7, 0x82, 0xff,
	0xa4, 0xe7, 0x35, 0x1f, 0x1b, 0xb2, 0x3e, 0xf7, 0x46, 0xef, 0xc8, 0xed, 0x39, 0xf7, 0xa3, 0xb3,
	0xbd, 0xac, 0x54, 0xad, 0xa4, 0x58, 0xbf, 0xa2, 0xec, 0xe5, 0xf0, 0x51, 0xf0, 0x68, 0xa4, 0x5c,
	0x07, 0xff, 0x7a, 0x79, 0x68, 0xb9, 0x5b, 0x87, 0xf7, 0x1f, 0x7e, 0x6e, 0x1a, 0xe5, 0xf6, 0x43,
	0x99, 0x55, 0xa0, 0x73, 0x0d, 0x4f, 0xb6, 0xcc, 0x1d, 0x87, 0xb2, 0x85, 0x26, 0x3f, 0x2e, 0x58,
	0xce, 0xb1, 0xfc, 0xf4, 0x37, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x59, 0x88, 0xfe, 0x45, 0x03, 0x00,
	0x00,
}
